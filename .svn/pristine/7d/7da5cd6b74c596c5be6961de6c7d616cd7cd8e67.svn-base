package com.smk.pay.core.factory;

import com.smk.pay.account.core.enums.AccountFundFlowEnum;
import com.smk.pay.core.manager.atom.IWithdraw;
import com.smk.pay.core.manager.atom.impl.WithdrawXJ;
import com.smk.pay.core.manager.atom.impl.WithdrawYHK;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

import java.util.concurrent.ConcurrentHashMap;

/**
 * Project plouto
 * Created by chuanzhi.macz
 * Date 2016/12/1 17:26
 */
@Component(value = "withdrawFactory")
public class WithdrawFactory implements InitializingBean, ApplicationContextAware {

    private static ConcurrentHashMap<AccountFundFlowEnum, IWithdraw> WITHDRAW_MAP =
            new ConcurrentHashMap<AccountFundFlowEnum, IWithdraw>();

    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        this.context = applicationContext;
    }

    public IWithdraw getWithdrawBean(AccountFundFlowEnum fundFlowEnum) {
        return WITHDRAW_MAP.get(fundFlowEnum);
    }

    public void afterPropertiesSet() throws Exception {
        WITHDRAW_MAP.put(AccountFundFlowEnum.YHK, context.getBean(WithdrawYHK.class));
        WITHDRAW_MAP.put(AccountFundFlowEnum.XJ, context.getBean(WithdrawXJ.class));
    }

    private ApplicationContext context;
}
