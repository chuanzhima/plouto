package com.smk.pay.core.manager.impl;

import com.smk.pay.core.dto.MerchantAccountInfoLogDto;
import com.smk.pay.core.entity.MerchantAccountInfoLogEntity;
import com.smk.pay.core.manager.IMerchantAccountInfoLogManager;
import com.smk.pay.core.mapper.MerchantAccountInfoLogEntityMapper;
import com.smk.pay.core.utils.BeanCopierCacheUtil;
import com.smk.pay.dal.condtion.Criteria;
import com.smk.pay.dal.condtion.EntityCondition;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.CollectionUtils;

import java.util.List;

/**
 * Project plouto
 * Created by chuanzhi.macz
 * Date 2016/11/10 16:51
 */
@Component(value = "merchantAccountInfoLogManager")
public class MerchantAccountInfoLogManager implements IMerchantAccountInfoLogManager {
    @Autowired
    private MerchantAccountInfoLogEntityMapper merchantAccountInfoLogEntityMapper;

    public void addMerchantAccountInfoLog(MerchantAccountInfoLogDto merchantAccountInfoLogDto) {

        MerchantAccountInfoLogEntity merchantAccountInfoLogEntity = new
                MerchantAccountInfoLogEntity();
        BeanCopierCacheUtil.copy(merchantAccountInfoLogDto, merchantAccountInfoLogEntity, null);
        merchantAccountInfoLogEntityMapper.insertSelective(merchantAccountInfoLogEntity);
    }

    public MerchantAccountInfoLogDto queryByMerchantNo(String merchantNo) {

        MerchantAccountInfoLogDto merchantAccountInfoLogDto = new MerchantAccountInfoLogDto();
        List<MerchantAccountInfoLogEntity> merchantAccountInfoLogEntityList = merchantAccountInfoLogEntityMapper.selectList(new EntityCondition().addCriteria(new Criteria().addCriterion("MERCHANT_ID = ", merchantNo, "MERCHANT_ID")));
        if (!CollectionUtils.isEmpty(merchantAccountInfoLogEntityList)) {
            BeanCopierCacheUtil.copy(merchantAccountInfoLogEntityList.get(0),
                    merchantAccountInfoLogDto, null);
            return merchantAccountInfoLogDto;
        } else {
            return null;
        }
    }
}
