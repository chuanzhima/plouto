package com.smk.pay.core.factory;

import com.smk.pay.account.core.enums.AccountBizEnum;
import com.smk.pay.core.manager.atom.IConsume;
import com.smk.pay.core.manager.atom.impl.ConsumeCredit;
import com.smk.pay.core.manager.atom.impl.ConsumeElder;
import com.smk.pay.core.manager.atom.impl.ConsumeNormal;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

import java.util.concurrent.ConcurrentHashMap;

/**
 * Project plouto
 * Created by chuanzhi.macz
 * Date 2016/11/15 14:00
 */
@Component(value = "consumeFactory")
public class ConsumeFactory implements InitializingBean, ApplicationContextAware {

    private static ConcurrentHashMap<AccountBizEnum, IConsume> CONSUME_MAP =
            new ConcurrentHashMap<AccountBizEnum, IConsume>();

    private ApplicationContext context;

    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        this.context = applicationContext;
    }

    public IConsume getConsumeBean(AccountBizEnum bizEnum) {
        return CONSUME_MAP.get(bizEnum);
    }

    public void afterPropertiesSet() throws Exception {
        CONSUME_MAP.put(AccountBizEnum.NORMAL, context.getBean(ConsumeNormal.class));
        CONSUME_MAP.put(AccountBizEnum.ELDER, context.getBean(ConsumeElder.class));
        CONSUME_MAP.put(AccountBizEnum.CREDIT, context.getBean(ConsumeCredit.class));
    }
}
