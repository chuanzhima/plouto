<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smk.pay.core.mapper.AntiFraudInterfaceLogEntityMapper">
    <resultMap id="BaseResultMap" type="com.smk.pay.core.entity.AntiFraudInterfaceLogEntity">
        <result column="TRANS_SERIAL_NUMBER" property="transSerialNumber" jdbcType="VARCHAR"/>
        <result column="APPLICATION_ID" property="applicationId" jdbcType="VARCHAR"/>
        <result column="GMT_CREATE" property="gmtCreate" jdbcType="DATE"/>
        <result column="CREATOR" property="creator" jdbcType="VARCHAR"/>
        <result column="APPLICATION_TYPE" property="applicationType" jdbcType="VARCHAR"/>
        <result column="START_TIME" property="startTime" jdbcType="DATE"/>
        <result column="EXPIRE_TIME" property="expireTime" jdbcType="DATE"/>
        <result column="AMOUNT" property="amount" jdbcType="DECIMAL"/>
        <result column="RESULT_CODE" property="resultCode" jdbcType="VARCHAR"/>
        <result column="RESULT_MSG" property="resultMsg" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="("
                                             close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_Where_Clause">
        <where>
            <foreach collection="condition.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="("
                                             close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    TRANS_SERIAL_NUMBER, APPLICATION_ID, GMT_CREATE, CREATOR, APPLICATION_TYPE, START_TIME, 
    EXPIRE_TIME, AMOUNT, RESULT_CODE, RESULT_MSG
  </sql>
    <select id="selectList" resultMap="BaseResultMap"
            parameterType="com.smk.pay.dal.condtion.EntityCondition">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ANTI_FRAUD_INTERFACE_LOG
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="delete" parameterType="com.smk.pay.dal.condtion.EntityCondition">
        delete from ANTI_FRAUD_INTERFACE_LOG
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.smk.pay.core.entity.AntiFraudInterfaceLogEntity">
    insert into ANTI_FRAUD_INTERFACE_LOG (TRANS_SERIAL_NUMBER, APPLICATION_ID, 
      GMT_CREATE, CREATOR, APPLICATION_TYPE, 
      START_TIME, EXPIRE_TIME, AMOUNT, 
      RESULT_CODE, RESULT_MSG)
    values (#{transSerialNumber,jdbcType=VARCHAR}, #{applicationId,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=DATE}, #{creator,jdbcType=VARCHAR}, #{applicationType,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=DATE}, #{expireTime,jdbcType=DATE}, #{amount,jdbcType=DECIMAL}, 
      #{resultCode,jdbcType=VARCHAR}, #{resultMsg,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective"
            parameterType="com.smk.pay.core.entity.AntiFraudInterfaceLogEntity">
        insert into ANTI_FRAUD_INTERFACE_LOG
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="transSerialNumber != null">
                TRANS_SERIAL_NUMBER,
            </if>
            <if test="applicationId != null">
                APPLICATION_ID,
            </if>
            <if test="gmtCreate != null">
                GMT_CREATE,
            </if>
            <if test="creator != null">
                CREATOR,
            </if>
            <if test="applicationType != null">
                APPLICATION_TYPE,
            </if>
            <if test="startTime != null">
                START_TIME,
            </if>
            <if test="expireTime != null">
                EXPIRE_TIME,
            </if>
            <if test="amount != null">
                AMOUNT,
            </if>
            <if test="resultCode != null">
                RESULT_CODE,
            </if>
            <if test="resultMsg != null">
                RESULT_MSG,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="transSerialNumber != null">
                #{transSerialNumber,jdbcType=VARCHAR},
            </if>
            <if test="applicationId != null">
                #{applicationId,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=DATE},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="applicationType != null">
                #{applicationType,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=DATE},
            </if>
            <if test="expireTime != null">
                #{expireTime,jdbcType=DATE},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="resultCode != null">
                #{resultCode,jdbcType=VARCHAR},
            </if>
            <if test="resultMsg != null">
                #{resultMsg,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="count" parameterType="com.smk.pay.dal.condtion.EntityCondition"
            resultType="java.lang.Integer">
        select count(*) from ANTI_FRAUD_INTERFACE_LOG
        <if test="_parameter != null">
            <include refid="Query_Where_Clause"/>
        </if>
    </select>
    <update id="updateSelective" parameterType="map">
        update ANTI_FRAUD_INTERFACE_LOG
        <set>
            <if test="record.transSerialNumber != null">
                TRANS_SERIAL_NUMBER = #{record.transSerialNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.applicationId != null">
                APPLICATION_ID = #{record.applicationId,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null">
                GMT_CREATE = #{record.gmtCreate,jdbcType=DATE},
            </if>
            <if test="record.creator != null">
                CREATOR = #{record.creator,jdbcType=VARCHAR},
            </if>
            <if test="record.applicationType != null">
                APPLICATION_TYPE = #{record.applicationType,jdbcType=VARCHAR},
            </if>
            <if test="record.startTime != null">
                START_TIME = #{record.startTime,jdbcType=DATE},
            </if>
            <if test="record.expireTime != null">
                EXPIRE_TIME = #{record.expireTime,jdbcType=DATE},
            </if>
            <if test="record.amount != null">
                AMOUNT = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.resultCode != null">
                RESULT_CODE = #{record.resultCode,jdbcType=VARCHAR},
            </if>
            <if test="record.resultMsg != null">
                RESULT_MSG = #{record.resultMsg,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_Where_Clause"/>
        </if>
    </update>
    <update id="update" parameterType="map">
        update ANTI_FRAUD_INTERFACE_LOG
        set TRANS_SERIAL_NUMBER = #{record.transSerialNumber,jdbcType=VARCHAR},
        APPLICATION_ID = #{record.applicationId,jdbcType=VARCHAR},
        GMT_CREATE = #{record.gmtCreate,jdbcType=DATE},
        CREATOR = #{record.creator,jdbcType=VARCHAR},
        APPLICATION_TYPE = #{record.applicationType,jdbcType=VARCHAR},
        START_TIME = #{record.startTime,jdbcType=DATE},
        EXPIRE_TIME = #{record.expireTime,jdbcType=DATE},
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
        RESULT_CODE = #{record.resultCode,jdbcType=VARCHAR},
        RESULT_MSG = #{record.resultMsg,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_Where_Clause"/>
        </if>
    </update>
</mapper>